swagger: '2.0'
info:
  version: '1.0'
  title: 'HotS API'
  description: 'HotsApi is an open Heroes of the Storm replay database where everyone can download replays and access it via this Api. Whether you want to continuously get new replays, download them all once, or just query their metadata, our service helps you to start development faster.'

# Config for hotsapi.net
host: hotsapi.net
basePath: /api/v1
schemes:
- http
- https

paths:
  /replays:
    get:
      summary: List all Replays
      operationId: listReplays
      tags:
        - replays
      produces:
        - application/json
      parameters:
        - name: start_date
          in: query
          description: Minimum replay date
          required: false
          type: string
          format: date
        - name: end_date
          in: query
          description: Maximum replay date
          required: false
          type: string
          format: date
        - name: game_map
          in: query
          description: Game map
          required: false
          type: string
        - name: game_type
          in: query
          description: Game type without spaces
          required: false
          type: string
        - name: player
          in: query
          description: Battle tag of a player
          required: false
          type: string
      responses:
        '200':
          description: An array with Replays
          schema:
            type: array
            items:
              $ref: '#/definitions/Replay'
    post:
      summary: Create one or more Replay as File Uploads.
      operationId: createReplay
      tags:
        - replays
      parameters:
        - name: file
          in: formData
          description: The uploaded replay file.
          type: file
      consumes:
        - 'multipart/form-data'
      responses:
        '200':
          description: Return an upload response
          schema:
            $ref: '#/definitions/UploadResponse'
  /replays/paged:
    get:
      summary: List all Replays
      operationId: listReplaysPaged
      tags:
        - replays
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page to display, defaults to 1
          required: false
          type: integer
        - name: start_date
          in: query
          description: Minimum replay date
          required: false
          type: string
          format: date
        - name: end_date
          in: query
          description: Maximum replay date
          required: false
          type: string
          format: date
        - name: game_map
          in: query
          description: Game map
          required: false
          type: string
        - name: game_type
          in: query
          description: Game type without spaces
          required: false
          type: string
        - name: player
          in: query
          description: Battle tag of a player
          required: false
          type: string
      responses:
        '200':
          description: An array with Replays
          schema:
            $ref: '#/definitions/PagedReplaysResponse'
  '/replays/{id}':
    get:
      summary: Requests a specific replay
      operationId: getReplayById
      tags:
        - replays
      produces:
        - application/json
      responses:
        '200':
          description: An array with Replays
          schema:
            $ref: '#/definitions/Replay'
    parameters:
      - name: id
        in: path
        description: The Id of the Replay
        required: true
        type: integer
  /upload:
    post:
      deprecated: true
      summary: Create one or more Replay as File Uploads.
      description: 'This method is deprecated because the method style does not follow a
        Ressource based approach. Please use the POST method of the Ressource
        __Replays__ instead.'
      operationId: uploadReplay
      tags:
        - replays
      consumes:
        - 'multipart/form-data'
      responses:
        '200':
          description: Return an upload response
          schema:
            $ref: '#/definitions/UploadResponse'
  /heroes:
    get:
      summary: Get list of all heroes
      tags:
        - heroes
      responses:
        '200':
          description: An array of heroes
          schema:
            type: array
            items:
              $ref: '#/definitions/Hero'
  /heroes/{hero}:
    get:
      summary: Get hero details
      tags:
        - heroes
      responses:
        '200':
          description: Hero object
          schema:
            $ref: '#/definitions/Hero'
    parameters:
      - name: hero
        in: path
        description: Hero name, or short name, or id
        required: true
        type: string
  /heroes/{hero}/abilities/{ability}:
    get:
      summary: Get hero ability by hotkey
      tags:
        - heroes
      responses:
        '200':
          description: Hero object
          schema:
            $ref: '#/definitions/Ability'
    parameters:
      - name: hero
        in: path
        description: Hero name, or short name, or id
        required: true
        type: string
      - name: ability
        in: path
        description: Ability hotkey
        required: true
        type: string
  /talents/{talent}:
    get:
      summary: Get talent
      tags:
        - talents
      responses:
        '200':
          description: Talent object
          schema:
            $ref: '#/definitions/Talent'
    parameters:
      - name: talent
        in: path
        description: Talent name or id
        required: true
        type: string
  /maps:
    get:
      summary: Get map list
      tags:
        - maps
      responses:
        '200':
          description: Map list
          schema:
            type: array
            items:
              $ref: '#/definitions/Map'
  /maps/{map}:
    get:
      summary: Get map
      tags:
        - maps
      responses:
        '200':
          description: Map object
          schema:
            $ref: '#/definitions/Map'
    parameters:
      - name: map
        in: path
        description: Map name or id
        required: true
        type: string

definitions:
    Replay:
      required:
        - id
        - filename
        - size
        - fingerprint
        - url
      properties:
        id:
          type: integer
          format: int64
        filename:
          type: string
        size:
          type: integer
          format: int64
        game_type:
          type: string
        game_date:
          type: string
          format: date-time
        game_length:
          type: integer
          format: int32
        game_map:
          type: string
        game_version:
          type: string
        region:
          type: integer
          format: int32
        fingerprint:
          type: string
        url:
          type: string
        players:
          type: array
          items:
            $ref: '#/definitions/Player'
    Player:
      required:
        - blizz_id
      properties:
        battletag:
          type: string
        hero:
          type: string
        hero_level:
          type: integer
          format: int32
          minimum: 0
        team:
          type: integer
          format: int32
          minimum: 0
          maximum: 1
        winner:
          type: boolean
        blizz_id:
          type: integer
          format: int64
        silenced:
          type: boolean
        party:
          type: integer
          description: Party number identifier
        talents:
          type: array
          items:
            $ref: '#/definitions/Talent'
        scores:
          type: array
          items:
            $ref: '#/definitions/Score'
    Talent:
      properties:
        name:
         type: string
        title:
          type: string
        description:
          type: string
        icon:
          type: string
        icon_url:
          type: array
          items:
            type: string
        ability:
          type: string
        sort:
          type: integer
        cooldown:
          type: integer
        mana_cost:
          type: integer
        level:
          type: integer
    Ability:
      properties:
        owner:
         type: string
         description: Ability source, one hero (like Abathur) can have several sources
        name:
         type: string
        title:
          type: string
        description:
          type: string
        icon:
          type: string
          description: Internal icon file name
        hotkey:
          type: string
        cooldown:
          type: integer
        mana_cost:
          type: integer
        trait:
          type: boolean
    Hero:
      properties:
        name:
         type: string
        short_name:
          type: string
        translations:
          type: array
          items:
            type: string
        icon_url:
          type: array
          items:
            type: string
        role:
          type: string
        type:
          type: string
        release_date:
          type: string
          format: date-time
        abilities:
          type: array
          items:
            $ref: '#/definitions/Ability'
        talents:
          type: array
          items:
            $ref: '#/definitions/Talent'
    Map:
      properties:
        name:
          type: string
        translations:
          type: array
          items:
            type: string
    Score:
      properties:
        level:
          type: integer
        kills:
          type: integer
        assists:
          type: integer
        takedowns:
          type: integer
        deaths:
          type: integer
        highest_kill_streak:
          type: integer
        hero_damage:
          type: integer
        siege_damage:
          type: integer
        structure_damage:
          type: integer
        minion_damage:
          type: integer
        creep_damage:
          type: integer
        summon_damage:
          type: integer
        time_cc_enemy_heroes:
          type: integer
        healing:
          type: integer
        self_healing:
          type: integer
        damage_taken:
          type: integer
        experience_contribution:
          type: integer
        town_kills:
          type: integer
        time_spent_dead:
          type: integer
        merc_camp_captures:
          type: integer
        watch_tower_captures:
          type: integer
        meta_experience:
          type: integer
    UploadResponse:
      required:
        - success
      properties:
        success:
          type: string
        Error:
          type: string
        status:
          type: string
        id:
          type: integer
          format: int64
        file:
          type: string
        url:
          type: string
    PagedReplaysResponse:
      properties:
        page:
          type: integer
        page_count:
          type: integer
        total:
          type: integer
        per_page:
          type: integer
        replays:
          type: array
          items:
            $ref: '#/definitions/Replay'
